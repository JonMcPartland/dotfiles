#!/usr/bin/env bash

function _createCARoot {
  local BASEDIR="${HOME}/.ssl/ca/root";

  _fancyLine "INFO" "Please provide the Common Name for the Root Authority.";
  read -r COMMON;

  /usr/local/opt/openssl/bin/openssl req \
    -config "${BASEDIR}/openssl.cnf" \
    -extensions v3_ca \
    -subj "/C=GB/ST=England/L=Middlesbrough/O=Big Bite Creative Ltd/CN=${COMMON}" \
    -new \
    -x509 \
    -sha256 \
    -days 7300 \
    -key "${BASEDIR}/private/root.key.pem" \
    -out "${BASEDIR}/certs/root.cert.pem" \
  2> /dev/null;

  chmod 444 "${BASEDIR}/certs/root.cert.pem";

  # verify
  # openssl x509 -noout -text -in certs/root.cert.pem

  _fancyLine "OK" "Root Certificate created.";

  _fancyLine "WARN" "Requesting sudo to add Root Certificate to Login Keychain.";
  sudo security add-trusted-cert -d \
    -r trustRoot \
    -k "${HOME}/Library/Keychains/Login.keychain" \
    "${BASEDIR}/certs/root.cert.pem" \
  2> /dev/null;

  _fancyLine "OK" "Root Certificate added to Keychain.";
}

function _createCAIntermediate {
  local BASEDIR="${HOME}/.ssl/ca/intermediate";
  local ROOTDIR="${HOME}/.ssl/ca/root";
  local VERIFIED;

  _fancyLine "INFO" "Please provide the Common Name for the Intermediate Authority.";
  read -r COMMON;

  AltName="" \
    /usr/local/opt/openssl/bin/openssl req \
      -config "${BASEDIR}/openssl.cnf" \
      -subj "/C=GB/ST=England/L=Middlesbrough/O=Big Bite Creative Ltd/CN=${COMMON}" \
      -new \
      -sha256 \
      -key "${BASEDIR}/private/intermediate.key.pem" \
      -out "${BASEDIR}/csr/intermediate.csr.pem" \
  2> /dev/null;

  yes | AltName="" \
    /usr/local/opt/openssl/bin/openssl ca \
      -config "${ROOTDIR}/openssl.cnf" \
      -extensions v3_intermediate_ca \
      -notext \
      -md sha256 \
      -days 3650 \
      -in "${BASEDIR}/csr/intermediate.csr.pem" \
      -out "${BASEDIR}/certs/intermediate.cert.pem" \
  2> /dev/null;

  chmod 444 "${BASEDIR}/certs/intermediate.cert.pem";

  # verify
  # openssl x509 -noout -text -in "${BASEDIR}/certs/intermediate.cert.pem"
  VERIFIED=$(/usr/local/opt/openssl/bin/openssl verify \
    -CAfile "${ROOTDIR}/certs/root.cert.pem" \
    "${BASEDIR}/certs/intermediate.cert.pem" | awk '{print $2}');

  if [[ "${VERIFIED}" == "OK" ]]; then
    _fancyLine "OK" "Intermediate Certificate created.";
  else
    _fancyLine "ERROR" "Intermediate Certificate invalid. Please retry.";

    return 1;
  fi
}

function newCA {
  local ROOTDIR="${HOME}/.ssl/ca";

  mkdir -p "${HOME}/.ssl" "${ROOTDIR}";

  local DIRS=("root" "intermediate");
  for DIR in "${DIRS[@]}"; do
    LOC="${ROOTDIR}/${DIR}";

    mkdir -p "${LOC}" "${LOC}/certs" "${LOC}/crl" "${LOC}/csr" "${LOC}/newcerts" "${LOC}/private";
    chmod 700 "${LOC}/private";

    if [ ! -e "${LOC}/index.txt" ]; then
      touch "${LOC}/index.txt";
    fi

    if [ ! -e "${LOC}/serial" ]; then
      echo 1000 > "${LOC}/serial";
    fi

    if [ ! -e "${LOC}/crlnumber" ]; then
      echo 1000 > "${LOC}/crlnumber";
    fi

    if [ ! -e "${LOC}/openssl.cnf" ]; then
      cp "${HOME}/.dotfiles/_files/${DIR}.cnf" "${LOC}/openssl.cnf";
    fi

    /usr/local/opt/openssl/bin/openssl genrsa -out "${LOC}/private/${DIR}.key.pem" 4096 2> /dev/null;
    chmod 400 "${LOC}/private/${DIR}.key.pem";

    _fancyLine "OK" "${DIR^} Authority private key created.";
  done;

  _createCARoot;
  _createCAIntermediate;

  cat "${ROOTDIR}/intermediate/certs/intermediate.cert.pem" "${ROOTDIR}/root/certs/root.cert.pem" \
    > "${ROOTDIR}/intermediate/certs/ca-chain.cert.pem";

  chmod 444 "${ROOTDIR}/intermediate/certs/ca-chain.cert.pem";

  _fancyLine "OK" "Certificate chain created.";
  _fancyLine "INFO" "Chain: ${ROOTDIR}/intermediate/certs/ca-chain.cert.pem";
}
